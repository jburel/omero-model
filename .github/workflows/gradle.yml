---
name: Gradle

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    strategy:
      matrix:
        java: [1.8, 11]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      gradle_version: 5.2.1 # set to empty to build with most recent version of gradle
      gradle_commands: build # default is build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Wrap with specified version
        run: gradle wrapper --gradle-version=${{ env.gradle_version }}
        if: ${{ env.gradle_version != '' }}
      - name: Wrap without version
        run: gradle wrapper
        if: ${{ env.gradle_version == '' }}
      - name: Run commands
        run: ./gradlew ${{ env.gradle_commands }}
  upload:
    if: startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest
    env:
      server: ome-staging
    steps:
      - uses: actions/checkout@v2
      - name: Set up Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ${{ env.server }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish package
        run: gradle publish
        env:
          MAVEN_USERNAME: ${{ secrets.CI_DEPLOY_USER }}
          MAVEN_PASSWORD: ${{ secrets.CI_DEPLOY_PASS }}